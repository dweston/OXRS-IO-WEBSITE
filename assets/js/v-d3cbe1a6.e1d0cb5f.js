"use strict";(self.webpackChunkoxrs_docs_site=self.webpackChunkoxrs_docs_site||[]).push([[1967],{6115:(n,e,t)=>{t.r(e),t.d(e,{data:()=>s});const s={key:"v-d3cbe1a6",path:"/guides/advanced/home_assistant.html",title:"OXRS StateMonitor Home Assistant integration",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Introduction",slug:"introduction",children:[{level:3,title:"Example 1: Use a switch to turn light on and off",slug:"example-1-use-a-switch-to-turn-light-on-and-off",children:[]},{level:3,title:"Example 2: Use two toggle buttons to toggle a light state from several locations",slug:"example-2-use-two-toggle-buttons-to-toggle-a-light-state-from-several-locations",children:[]},{level:3,title:"Example 3: Use two buttons to control brightness and state of a light bulb",slug:"example-3-use-two-buttons-to-control-brightness-and-state-of-a-light-bulb",children:[]},{level:3,title:"Example 4: Use a rotary encoder with integrated button to control brightness and state of a light bulb",slug:"example-4-use-a-rotary-encoder-with-integrated-button-to-control-brightness-and-state-of-a-light-bulb",children:[]}]}],filePathRelative:"guides/advanced/home_assistant.md",git:{updatedTime:1638302668e3,contributors:[{name:"moinmoin-sh",email:"53935853+moinmoin-sh@users.noreply.github.com",commits:2}]}}},4910:(n,e,t)=>{t.r(e),t.d(e,{default:()=>U});var s=t(6252);const a=(0,s._)("h1",{id:"oxrs-statemonitor-home-assistant-integration",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#oxrs-statemonitor-home-assistant-integration","aria-hidden":"true"},"#"),(0,s.Uk)(" OXRS StateMonitor Home Assistant integration")],-1),l=(0,s._)("h2",{id:"introduction",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),(0,s.Uk)(" Introduction")],-1),i=(0,s._)("p",null,[(0,s.Uk)("This guide shows "),(0,s._)("code",null,"automation"),(0,s.Uk)(" samples to be used in Home Assistant. They make use of the event structure that is sent by the StateMonitor via MQTT")],-1),r=(0,s.Uk)("For details on "),o=(0,s._)("code",null,"configuration",-1),p=(0,s.Uk)(" and "),c=(0,s._)("code",null,"events",-1),u=(0,s.Uk)(" see the "),b=(0,s.Uk)("StateMonitor"),d=(0,s.Uk)(" documentation."),g=(0,s._)("p",null,[(0,s.Uk)("The following samples are using the config topic "),(0,s._)("code",null,"conf/58391f"),(0,s.Uk)(" and the state topic "),(0,s._)("code",null,"stat/58391f"),(0,s.Uk)(". Those are the defaults as allocated by the FW using the MAC address of the device. Index numbers need to be replaced according to your set up.")],-1),m=(0,s.Uk)("All samples are based on Home Assistant "),h={href:"https://www.home-assistant.io/docs/automation/trigger/#mqtt-trigger",target:"_blank",rel:"noopener noreferrer"},f=(0,s.Uk)("MQTT triggers"),x=(0,s.Uk)(" were a template filters the payload sent by the StateMonitor via "),y=(0,s._)("code",null,"stat/..",-1),v=(0,s.Uk)(" for the desired "),_=(0,s._)("code",null,"index",-1),q=(0,s.Uk)(" and "),w=(0,s._)("code",null,"event",-1),k=(0,s.uE)('<h3 id="example-1-use-a-switch-to-turn-light-on-and-off" tabindex="-1"><a class="header-anchor" href="#example-1-use-a-switch-to-turn-light-on-and-off" aria-hidden="true">#</a> Example 1: Use a <code>switch</code> to turn light on and off</h3><hr><h4 id="typical-use-case-standard-wall-switch" tabindex="-1"><a class="header-anchor" href="#typical-use-case-standard-wall-switch" aria-hidden="true">#</a> Typical use case : standard wall switch.</h4><p>to configure input <code>index: 5</code> as <code>switch</code> publish :</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> -t conf/58391f  -m &#39;{&quot;inputs&quot;: [{ &quot;index&quot;: 5 , &quot;type&quot;: &quot;switch&quot;}]}&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>use configured switch to turn a light on / off.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>automation:\n  - id: OX001\n    alias: OXRS idx 5 on\n    trigger:\n    - platform: mqtt\n      topic: stat/58391f\n    condition:\n    - condition: template\n      value_template: &#39;{{trigger.payload_json.index == 5 and trigger.payload_json.event == &quot;on&quot;}}&#39;\n    action:\n    - service: light.turn_on\n      target:\n        entity_id: light.light_bulb\n      \n  - id: OX002\n    alias: OXRS idx 5 off\n    trigger:\n    - platform: mqtt\n      topic: stat/58391f\n    condition:\n    - condition: template\n      value_template: &#39;{{trigger.payload_json.index == 5 and trigger.payload_json.event == &quot;off&quot;}}&#39;\n    action:\n    - service: light.turn_off\n      target:\n        entity_id: light.light_bulb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="example-2-use-two-toggle-buttons-to-toggle-a-light-state-from-several-locations" tabindex="-1"><a class="header-anchor" href="#example-2-use-two-toggle-buttons-to-toggle-a-light-state-from-several-locations" aria-hidden="true">#</a> Example 2: Use two <code>toggle</code> buttons to toggle a light state from several locations</h3><hr><h4 id="typical-use-cases-hallway-lighting-or-bedroom-lighting" tabindex="-1"><a class="header-anchor" href="#typical-use-cases-hallway-lighting-or-bedroom-lighting" aria-hidden="true">#</a> Typical use cases: hallway lighting or bedroom lighting.</h4><p>to configure inputs <code>index: 1</code> and <code>index: 2</code> as <code>toggle</code> publish :</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> -t conf/58391f  -m &#39;{&quot;inputs&quot;: [{&quot;index&quot;: 2, &quot;type&quot;: &quot;toggle&quot;},{&quot;index&quot;: 1, &quot;type&quot;: &quot;toggle&quot; }]}&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Use configured buttons to toggle connected light by any of the buttons.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>automation:\n  - id: OX007\n    alias: OXRS idx 1/2 toggle\n    trigger:\n    - platform: mqtt\n      topic: stat/58391f\n    condition:\n      condition: or\n      conditions:\n      - condition: template\n        value_template: &#39;{{trigger.payload_json.index == 1 and trigger.payload_json.event == &quot;toggle&quot;}}&#39;\n      - condition: template\n        value_template: &#39;{{trigger.payload_json.index == 2 and trigger.payload_json.event == &quot;toggle&quot;}}&#39;\n    action:\n    - service: light.toggle\n      target:\n        entity_id: light.light_bulb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Can be as many buttons as you like, just add more conditions:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  - condition: template\n      value_template: &#39;{{trigger.payload_json.index == nnn and trigger.payload_json.event == &quot;toggle&quot;}}&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><h3 id="example-3-use-two-buttons-to-control-brightness-and-state-of-a-light-bulb" tabindex="-1"><a class="header-anchor" href="#example-3-use-two-buttons-to-control-brightness-and-state-of-a-light-bulb" aria-hidden="true">#</a> Example 3: Use two <code>buttons</code> to control brightness and state of a light bulb</h3><hr><h4 id="typical-use-case-control-of-lights-with-variable-brightness-with-up-and-down-buttons" tabindex="-1"><a class="header-anchor" href="#typical-use-case-control-of-lights-with-variable-brightness-with-up-and-down-buttons" aria-hidden="true">#</a> Typical use case: control of lights with variable brightness with up and down buttons</h4><p>to configure inputs <code>index: 1</code> and <code>index: 2</code> as <code>buttons</code> publish :</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> -t conf/58391f  -m &#39;{&quot;inputs&quot;: [{&quot;index&quot;: 2, &quot;type&quot;: &quot;button&quot;},{&quot;index&quot;: 1, &quot;type&quot;: &quot;button&quot; }]}&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>This is a more complex automation. It uses the <code>single</code> and <code>hold</code> events from each of the 2 involved buttons. The <code>single</code> event is used to control the state of the light bulb and the <code>hold</code> event for brightness control.</p><table><thead><tr><th style="text-align:left;">index</th><th style="text-align:left;">event</th><th style="text-align:left;">function</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">single</td><td style="text-align:left;">turn off</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;">hold</td><td style="text-align:left;">decrease brightness</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">single</td><td style="text-align:left;">turn on</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">hold</td><td style="text-align:left;">increase brightness</td></tr></tbody></table><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># on / off automations\n\nautomation:\n  - id: OX003\n    alias: OXRS idx 1 single off\n    trigger:\n    - platform: mqtt\n      topic: stat/58391f\n    condition:\n    - condition: template\n      value_template: &#39;{{trigger.payload_json.index == 1 and trigger.payload_json.event == &quot;single&quot;}}&#39;\n    action:\n    - service: light.turn_off\n      target:\n        entity_id: light.light_bulb\n        \n  - id: OX004\n    alias: OXRS idx 2 single on\n    trigger:\n    - platform: mqtt\n      topic: stat/58391f\n    condition:\n    - condition: template\n      value_template: &#39;{{trigger.payload_json.index == 2 and trigger.payload_json.event == &quot;single&quot;}}&#39;\n    action:\n    - service: light.turn_on\n      target:\n        entity_id: light.light_bulb\n\n# brightness control\n\nautomation:\n  - id: OX005\n    alias: OXRS idx 1 hold\n    trigger:\n    - platform: mqtt\n      topic: stat/58391f\n    condition:\n    - condition: template\n      value_template: &#39;{{trigger.payload_json.index == 1 and trigger.payload_json.event == &quot;hold&quot;}}&#39;\n    action:\n    - service: light.turn_on\n      target:\n        entity_id: light.light_bulb\n      data:\n        brightness_step_pct: -5\n        \n  - id: OX006\n    alias: OXRS idx 2 hold\n    trigger:\n    - platform: mqtt\n      topic: stat/58391f\n    condition:\n    - condition: template\n      value_template: &#39;{{trigger.payload_json.index == 2 and trigger.payload_json.event == &quot;hold&quot;}}&#39;\n    action:\n    - service: light.turn_on\n      target:\n        entity_id: light.light_bulb\n      data:\n        brightness_step_pct: 5     \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><h3 id="example-4-use-a-rotary-encoder-with-integrated-button-to-control-brightness-and-state-of-a-light-bulb" tabindex="-1"><a class="header-anchor" href="#example-4-use-a-rotary-encoder-with-integrated-button-to-control-brightness-and-state-of-a-light-bulb" aria-hidden="true">#</a> Example 4: Use a rotary encoder with integrated button to control brightness and state of a light bulb</h3><hr><h4 id="typical-use-case-single-knob-control-of-lights-with-variable-brightness-via-a-rotary-encoder" tabindex="-1"><a class="header-anchor" href="#typical-use-case-single-knob-control-of-lights-with-variable-brightness-via-a-rotary-encoder" aria-hidden="true">#</a> Typical use case: single knob control of lights with variable brightness via a rotary encoder</h4><p>The outputs <code>A</code> and <code>B</code> of the <code>rotary encoder</code> are connected to <code>index: 1</code> and <code>index: 2</code> . The integrated <code>push button</code> of the <code>rotary encoder</code> is connected to <code>index: 3</code> .</p><p>To configure inputs <code>index: 1</code> and <code>index: 2</code> as <code>rotary</code> and <code>index:3</code> as <code>toggle</code> publish :</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> -t conf/58391f -m &#39;{&quot;inputs&quot;: [\n    {&quot;index&quot;: 1, &quot;type&quot;: &quot;rotary&quot;},\n    {&quot;index&quot;: 2, &quot;type&quot;: &quot;rotary&quot;},\n    {&quot;index&quot;: 3, &quot;type&quot;: &quot;toggle&quot;}]}&#39;\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>This is another more complex automation. It uses the <code>up</code> and <code>down</code> events from the rotary encoder for brightness control. The <code>toggle</code> event of the integrated push button is used to control the state of the light bulb.</p><p>Turning the rotary encoder has no effect if the light is turned off.</p><table><thead><tr><th style="text-align:left;">index</th><th style="text-align:left;">event</th><th style="text-align:left;">function</th></tr></thead><tbody><tr><td style="text-align:left;">2</td><td style="text-align:left;">up</td><td style="text-align:left;">increase brightness</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">down</td><td style="text-align:left;">decrease brightness</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">toggle</td><td style="text-align:left;">turn on / off</td></tr></tbody></table><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>automation:\n\n# brightness control up\n  - id: OX010\n    alias: OXRS idx 2 up\n    trigger:\n    - platform: mqtt\n      topic: stat/58391f\n    condition:\n      condition: and\n      conditions:\n      - condition: state\n        entity_id: light.light_bulb\n        state: &#39;on&#39;\n      - condition: template\n        value_template: &#39;{{trigger.payload_json.index == 2 and trigger.payload_json.event == &quot;up&quot;}}&#39;\n    action:\n    - service: light.turn_on\n      target:\n        entity_id: light.light_bulb\n      data:\n        brightness_step: 10\n\n# brightness control down\n  - id: OX011\n    alias: OXRS idx 2 down\n    trigger:\n    - platform: mqtt\n      topic: stat/58391f\n    condition:\n      condition: and\n      conditions:\n      - condition: template\n        value_template: &#39;{{ state_attr(&quot;light.light_bulb&quot;, &quot;brightness&quot;) &gt; 10 }}&#39;\n      - condition: template\n        value_template: &#39;{{trigger.payload_json.index == 2 and trigger.payload_json.event == &quot;down&quot;}}&#39;\n    action:\n    - service: light.turn_on\n      target:\n        entity_id: light.light_bulb\n      data:\n        brightness_step: -10\n\n# toggle state (on / off)\n  - id: OX012\n    alias: OXRS idx 3 toggle\n    trigger:\n    - platform: mqtt\n      topic: stat/58391f\n    condition:\n    - condition: template\n      value_template: &#39;{{trigger.payload_json.index == 3 and trigger.payload_json.event == &quot;toggle&quot;}}&#39;\n    action:\n    - service: light.toggle\n      target:\n        entity_id: light.light_bulb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div>',33),U={render:function(n,e){const t=(0,s.up)("RouterLink"),U=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[a,l,i,(0,s._)("p",null,[r,o,p,c,u,(0,s.Wm)(t,{to:"/docs/firmware/state-monitor-esp32.html"},{default:(0,s.w5)((()=>[b])),_:1}),d]),g,(0,s._)("p",null,[m,(0,s._)("a",h,[f,(0,s.Wm)(U)]),x,y,v,_,q,w]),k],64)}}}}]);